/** @file
*  Serial Port Console Redirection Table (SPCR).
*
*  Copyright (c) 2024, Academy of Intelligent Innovation, Shandong Universiy, China.P.R. All rights reserved.<BR>
*
*  SPDX-License-Identifier: BSD-2-Clause-Patent
*
**/

#include <IndustryStandard/Acpi.h>
#include <Library/AcpiLib.h>
#include <IndustryStandard/MemoryMappedConfigurationSpaceAccessTable.h>
#include <IndustryStandard/SerialPortConsoleRedirectionTable.h>
#include <IndustryStandard/RiscVServerAcpi.h>

#pragma pack(push, 1)

STATIC EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE Spcr = {
    RISCV_ACPI_HEADER (
      EFI_ACPI_6_5_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_SIGNATURE,
      EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE,
      EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_REVISION
    ),
    // UINT8                                   InterfaceType;
    EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_INTERFACE_TYPE_16550,
    // UINT8                                   Reserved1[3];
    {
      EFI_ACPI_RESERVED_BYTE,
      EFI_ACPI_RESERVED_BYTE,
      EFI_ACPI_RESERVED_BYTE
    },
    // EFI_ACPI_6_5_GENERIC_ADDRESS_STRUCTURE  BaseAddress;
    ARM_GAS32 (0x10000000),
    // UINT8                                   InterruptType;
    0x08,
    // UINT8                                   Irq;
    19,
    // UINT32                                  GlobalSystemInterrupt;
    10,
    // UINT8                                   BaudRate;
    EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_BAUD_RATE_115200,
    // UINT8                                   Parity;
    EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_PARITY_NO_PARITY,
    // UINT8                                   StopBits;
    EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_STOP_BITS_1,
    // UINT8                                   FlowControl;
    0,
    // UINT8                                   TerminalType;
    EFI_ACPI_SERIAL_PORT_CONSOLE_REDIRECTION_TABLE_TERMINAL_TYPE_ANSI,
    // UINT8                                   Reserved2;
    EFI_ACPI_RESERVED_BYTE,
    // UINT16                                  PciDeviceId;
    0xFFFF,
    // UINT16                                  PciVendorId;
    0xFFFF,
    // UINT8                                   PciBusNumber;
    0x00,
    // UINT8                                   PciDeviceNumber;
    0x00,
    // UINT8                                   PciFunctionNumber;
    0x00,
    // UINT32                                  PciFlags;
    0x00000000,
    // UINT8                                   PciSegment;
    0x00,
    // UINT32                                  Reserved3;
    EFI_ACPI_RESERVED_DWORD
  };

  #pragma pack(pop)

  // Reference the table being generated to prevent the optimizer from removing
  // the data structure from the executable
  VOID* CONST ReferenceAcpiTable = &Spcr;

